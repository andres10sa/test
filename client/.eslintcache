[{"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\index.js":"1","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\App.js":"2","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\reportWebVitals.js":"3","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\Footer.js":"4","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\Header.js":"5","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\view\\Fetch.js":"6","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\context\\FetchContext.js":"7","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\helper.js":"8","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\fetch\\Users.js":"9","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\fetch\\UserSelect.js":"10","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\fetch\\LettersList.js":"11","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\fetch\\CardUser.js":"12","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\context\\ShipContext.js":"13","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\view\\Ship.js":"14","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\ship\\Search.js":"15","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\ship\\ShipCard.js":"16","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\Spinner.js":"17","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\context\\PlanetContext.js":"18","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\view\\Planet.js":"19","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\planet\\Search.js":"20","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\planet\\PlanetCard.js":"21"},{"size":508,"mtime":1611426212521,"results":"22","hashOfConfig":"23"},{"size":965,"mtime":1611526125961,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":605,"mtime":1611440557991,"results":"26","hashOfConfig":"23"},{"size":598,"mtime":1611440494856,"results":"27","hashOfConfig":"23"},{"size":717,"mtime":1611541267364,"results":"28","hashOfConfig":"23"},{"size":1054,"mtime":1611504966042,"results":"29","hashOfConfig":"23"},{"size":7181,"mtime":1611538826230,"results":"30","hashOfConfig":"23"},{"size":567,"mtime":1611446550930,"results":"31","hashOfConfig":"23"},{"size":735,"mtime":1611459312595,"results":"32","hashOfConfig":"23"},{"size":1166,"mtime":1611459735227,"results":"33","hashOfConfig":"23"},{"size":1269,"mtime":1611444018546,"results":"34","hashOfConfig":"23"},{"size":632,"mtime":1611524646530,"results":"35","hashOfConfig":"23"},{"size":299,"mtime":1611497381844,"results":"36","hashOfConfig":"23"},{"size":1168,"mtime":1611539581844,"results":"37","hashOfConfig":"23"},{"size":1572,"mtime":1611527917945,"results":"38","hashOfConfig":"23"},{"size":465,"mtime":1611525162943,"results":"39","hashOfConfig":"23"},{"size":852,"mtime":1611538728804,"results":"40","hashOfConfig":"23"},{"size":301,"mtime":1611541202437,"results":"41","hashOfConfig":"23"},{"size":1453,"mtime":1611539788912,"results":"42","hashOfConfig":"23"},{"size":1583,"mtime":1611539247611,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1yaqg8m",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\index.js",[],["88","89"],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\App.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\reportWebVitals.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\Footer.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\Header.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\view\\Fetch.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\context\\FetchContext.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\helper.js",["90","91"],"import axios from \"axios\";\r\n\r\nconst url = process.env.REACT_APP_API_TEST;\r\n//FETCH EXCERCISE\r\n\r\n//Función que ordena el array de usuarios por la propiedad que se le asigne como argumento y que depende de la opción escogida\r\nexport const orderArray = (array, property, subProperty) => {\r\n    const alphabeticalOrder = array?.sort((a, b) => {\r\n        if (a[property][subProperty].toLowerCase() < b[property][subProperty].toLowerCase()) {\r\n            return -1;\r\n        }\r\n        if (a[property][subProperty].toLowerCase() > b[property][subProperty].toLowerCase()) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    })\r\n    return alphabeticalOrder;\r\n}\r\n\r\n\r\n//Obtener usuarios de la API\r\nexport const getUsers = async (fetchAction, setUsers, setList, setHigher) => {\r\n\r\n    try {\r\n        //Listado de usuario obtenidos de la API\r\n        const { data } = await axios.get(url);\r\n        const users = extractData(data, 'gender');//Función que extrae la data de los usuarios\r\n\r\n        const property = fetchAction === 'orderLastname' ? 'last' : 'first';//Determina la propiedad por la cual se van a ordenar los usuarios\r\n        setUsers(orderArray(users, 'name', property));//Guarda los usuarios en el state\r\n        setListLetters(users, setList, setHigher);//Función que realiza el conteo de cada una de las letras \r\n    } catch (error) {\r\n        console.log(\"Hubo un error: \", error)\r\n    }\r\n};\r\n\r\n\r\n\r\nconst setListLetters = async (users, setList, setHigher) => {\r\n\r\n\r\n    let list = [];//Array que almacena el listado de letras de los nombres y apellidos de los usuarios\r\n    let objectList = {};//Objeto que almacena las letras con su respectivo conteo\r\n\r\n    //Esta función recorre el array formado por cada propiedad first y last de cada objeto formado en el bucle de abajo y los almacena en un array llamado list\r\n    const saveLetter = (array, list) => {\r\n        array.forEach((letter) => {\r\n            const lowercase = letter.toLowerCase();\r\n            lowercase !== ' ' && list.push(lowercase)\r\n        })\r\n    }\r\n\r\n\r\n    users.forEach(user => {\r\n        const arrayName = user.name.first.split('');//Cada nombre de cada objeto se convierte en un array que luego se pasa como argumento del a función saveLetter\r\n        const arrayLastName = user.name.last.split('');//Cada apellido de cada objeto se convierte en un array que luego se pasa como argumento del a función saveLetter\r\n        saveLetter(arrayName, list);\r\n        saveLetter(arrayLastName, list);\r\n    })\r\n\r\n    //Este bucle almacena como propiedades las letras de los nonbres y apellidos de los usuarios y su respectivo conteo en el objeto objectList\r\n    list.forEach(letter => {\r\n        if (objectList[letter]) {\r\n            objectList[letter] = objectList[letter] + 1\r\n        } else {\r\n            objectList[letter] = 1\r\n        }\r\n    })\r\n\r\n    //Array que almacena los objetos llave valor con la palabra y el numero de veces que se repite\r\n    let lettersAccount = [];\r\n    for (const property in objectList) {\r\n        lettersAccount.push({ ['A']: property, ['B']: objectList[property] })\r\n\r\n    }\r\n    lettersAccount.sort((a, b) => a['A'] < b['A'] ? -1 : a['A'] > b['A'] ? 1 : 0);//Ordena el listado de letras en orden ascendente\r\n\r\n    //Calcular el numero de veces que aparece la letra más repetida\r\n    let mayor = 0;\r\n    lettersAccount.forEach(ele => mayor = ele['B'] > mayor ? ele['B'] : mayor);\r\n    setHigher(mayor);\r\n    setList(lettersAccount);\r\n}\r\n\r\n\r\n//SHIP EXCERCISE\r\n//Función que hace las busqueda de la nave según los parametros establecidos en la busqueda\r\nexport const searchShip = async (setShip, passengers) => {\r\n    const { data } = await axios.get(url);\r\n    const ships = extractData(data, 'max_atmosphering_speed');\r\n\r\n    let fast = 0;//Variable que almacenará la velocidad de la nave más rápida\r\n\r\n    //El primer filtro busca las naves que cumplan con la capacidad de pasajeros establecida como parametro y con una capacidad de combustible superior o igual una semana\r\n    const capacityShips = ships?.filter(ele => parseInt(ele?.passengers) === parseInt(passengers) && !ele?.consumables.includes('days'));\r\n\r\n    //Si más de una nave cumple con las condiciones se aplica el if, de lo contrario el else.\r\n    if (capacityShips?.length > 1) {\r\n        //El segundo filtro consiste en determinar la nave más veloz en caso de haber varias\r\n        //Hay velocidades que vienen con unidades, por ejemplo 1000 km, para ello toca extraer dicha parte y comparar unicamente los valores númericos\r\n        capacityShips.forEach(ele => {\r\n            let numberSpeed = '';//Variable que almacenará el valor numerico de la velocidad de cada nave\r\n            let speed = ele.max_atmosphering_speed;//Valor de la velocidad de cada nave\r\n            speed.split('').forEach(ele => numberSpeed += !isNaN(Number(ele)) ? ele : null);//Extrae las unidades de las velocidades que las tengan\r\n            speed = numberSpeed;//Se actualiza el valor de la velocidad de cada nave incluyendo unicamente el valor númerico\r\n            fast = parseInt(speed) > parseInt(fast) ? speed : fast;//La variable fast se setea con el valor de la nave más rápida\r\n        });\r\n        //Este find se encarga de retornar la nave más rápida,evaluando la posiblidad de que exista o no esta propiedad en el objeto (algunos nave viene con n/a como velocidad)\r\n        setShip(capacityShips?.find(ele => ele?.max_atmosphering_speed === fast));\r\n    } else {\r\n        setShip(capacityShips[0])\r\n    }\r\n}\r\n\r\n\r\n//FUNCIÓN PARA SEPARAR LA DATA\r\nexport const extractData = (array, property) => {\r\n    let data = [];\r\n    array.forEach(ele => {\r\n        if (ele.hasOwnProperty(property)) {\r\n            data.push(ele)\r\n        }\r\n    })\r\n    return data;\r\n}\r\n\r\n\r\n//PLANET\r\n\r\nexport const getTerrains = async (setTerrains, currentTerrain, setPlanet) => {\r\n    const { data } = await axios.get(url);\r\n    const planets = extractData(data, 'terrain');\r\n    let terrainTypes = [];\r\n    planets.forEach(ele => {\r\n        const terrain = ele.terrain;\r\n        let data = terrain.includes(',') ? terrain.split(',') : [terrain];\r\n        terrainTypes = [...terrainTypes, ...data]\r\n    });\r\n    if (currentTerrain) {\r\n        const current = planets?.filter(ele => ele.terrain.includes(currentTerrain))\r\n        if (current.length > 1) {\r\n            let maxPopulation = 0;\r\n            current.forEach(ele => {\r\n                const population = parseInt(ele.population);\r\n                if (!isNaN(population)) {\r\n                    if (population > maxPopulation) {\r\n                        maxPopulation = population;\r\n                    }\r\n                }\r\n            })\r\n            const selectedPlanet = current.find(ele => parseInt(ele.population) === parseInt(maxPopulation));\r\n            setPlanet(selectedPlanet);\r\n\r\n        } else {\r\n            setPlanet(current[0])\r\n        }\r\n    } else {\r\n        setPlanet(null);\r\n    }\r\n\r\n\r\n    setTerrains(terrainTypes);\r\n}\r\n\r\n\r\n//Función que elimia los espacios de los terrenos\r\nexport const removeSpace = (name) => {\r\n    if (name[0] === ' ') name = name.slice(1)\r\n    return name[0].toUpperCase() + name.slice(1);\r\n}","C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\fetch\\Users.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\fetch\\UserSelect.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\fetch\\LettersList.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\fetch\\CardUser.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\context\\ShipContext.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\view\\Ship.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\ship\\Search.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\ship\\ShipCard.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\Spinner.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\context\\PlanetContext.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\view\\Planet.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\planet\\Search.js",[],"C:\\Users\\CARDIF\\Desktop\\technical-test\\client\\src\\components\\planet\\PlanetCard.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":73,"column":31,"nodeType":"98","messageId":"99","endLine":73,"endColumn":46,"fix":"100"},{"ruleId":"96","severity":1,"message":"101","line":73,"column":48,"nodeType":"98","messageId":"99","endLine":73,"endColumn":75,"fix":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-useless-computed-key","Unnecessarily computed property ['A'] found.","Property","unnecessarilyComputedProperty",{"range":"105","text":"106"},"Unnecessarily computed property ['B'] found.",{"range":"107","text":"108"},"no-global-assign","no-unsafe-negation",[3043,3048],"'A'",[3060,3065],"'B'"]